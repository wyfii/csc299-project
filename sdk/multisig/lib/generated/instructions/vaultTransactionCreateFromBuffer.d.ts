/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { VaultTransactionCreateArgs } from '../types/VaultTransactionCreateArgs';
/**
 * @category Instructions
 * @category VaultTransactionCreateFromBuffer
 * @category generated
 */
export type VaultTransactionCreateFromBufferInstructionArgs = {
    args: VaultTransactionCreateArgs;
};
/**
 * @category Instructions
 * @category VaultTransactionCreateFromBuffer
 * @category generated
 */
export declare const vaultTransactionCreateFromBufferStruct: beet.FixableBeetArgsStruct<VaultTransactionCreateFromBufferInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _vaultTransactionCreateFromBuffer_ instruction
 *
 * @property [_writable_] vaultTransactionCreateItemMultisig
 * @property [_writable_] vaultTransactionCreateItemTransaction
 * @property [**signer**] vaultTransactionCreateItemCreator
 * @property [_writable_, **signer**] vaultTransactionCreateItemRentPayer
 * @property [] vaultTransactionCreateItemSystemProgram
 * @property [_writable_] transactionBuffer
 * @property [_writable_, **signer**] creator
 * @category Instructions
 * @category VaultTransactionCreateFromBuffer
 * @category generated
 */
export type VaultTransactionCreateFromBufferInstructionAccounts = {
    vaultTransactionCreateItemMultisig: web3.PublicKey;
    vaultTransactionCreateItemTransaction: web3.PublicKey;
    vaultTransactionCreateItemCreator: web3.PublicKey;
    vaultTransactionCreateItemRentPayer: web3.PublicKey;
    vaultTransactionCreateItemSystemProgram: web3.PublicKey;
    transactionBuffer: web3.PublicKey;
    creator: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const vaultTransactionCreateFromBufferInstructionDiscriminator: number[];
/**
 * Creates a _VaultTransactionCreateFromBuffer_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category VaultTransactionCreateFromBuffer
 * @category generated
 */
export declare function createVaultTransactionCreateFromBufferInstruction(accounts: VaultTransactionCreateFromBufferInstructionAccounts, args: VaultTransactionCreateFromBufferInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
//# sourceMappingURL=vaultTransactionCreateFromBuffer.d.ts.map